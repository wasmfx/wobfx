// @FAIL-V8

// Imports

import M_{T, x, v, s, p, f, g, t, a} from "test/export";
import M2_{q, a} from "test/export2";

type U = M_T<Bool$, Int$>;

assert M_x == 9;
assert M_v == 3.14;
M_v := 2.7;
assert M_v == 2.7;
assert M_s[2] == "x"[0];
assert M_p.0.$ == 5;  // fails on V8?
assert M_p.1.$;

assert M_f() == 9;
assert M_g() == 2.7;

type X<X> = M_t;
assert M_t[0] == "_"[0];


// Type compatibility

let ps : (Int$, Bool$)[] = [M_p, M2_q];
let as : Int[][] = [M_a, M2_a];
