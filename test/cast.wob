// @FAIL-PARAMETRIC

// Casts

class C() {};
class D() <: C() {};
class E() <: D() { func f() {}; };
class F() <: D() {};

let n = null;
let c = new C();
let d = new D();
let e = new E();
let f = new F();

let no : Object = n;
let co : Object = c;
let do : Object = d;
let eo : Object = e;
let fo : Object = f;

assert (no :> C == n);
assert (no :> D == null);
assert (no :> E == null);
assert (no :> F == null);

assert (co :> C == c);
assert (co :> D == null);
assert (co :> E == null);
assert (co :> F == null);

assert (do :> C == d);
assert (do :> D == d);
assert (do :> E == null);
assert (do :> F == null);

assert (eo :> C == e);
assert (eo :> D == e);
assert (eo :> E == e);
assert (eo :> F == null);

assert (fo :> C == f);
assert (fo :> D == f);
assert (fo :> E == null);
assert (fo :> F == f);
